{"ast":null,"code":"var _jsxFileName = \"/home/seyl/Training/Informatika/Project/Sem 4/react-proyek-4/client/src/hoc/auth.js\";\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\nexport default function (ComposedClass, reload, adminRoute = null) {\n  function AuthenticationCheck(props) {\n    let user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(auth()).then(response => {\n        if (!response.payload.isAuth) {\n          if (reload) {\n            props.history.push('/login');\n          }\n        } else {\n          if (adminRoute && !response.payload.isAdmin) {\n            props.history.push('/');\n          } else {\n            if (reload === false) {\n              props.history.push('/');\n            }\n          }\n        }\n      });\n    }, []);\n    return React.createElement(ComposedClass, Object.assign({}, props, {\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n  return AuthenticationCheck;\n}","map":{"version":3,"sources":["/home/seyl/Training/Informatika/Project/Sem 4/react-proyek-4/client/src/hoc/auth.js"],"names":["React","useEffect","auth","useSelector","useDispatch","ComposedClass","reload","adminRoute","AuthenticationCheck","props","user","state","dispatch","then","response","payload","isAuth","history","push","isAdmin"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,eAAe,UAAUC,aAAV,EAAyBC,MAAzB,EAAiCC,UAAU,GAAG,IAA9C,EAAoD;AAC/D,WAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAEhC,QAAIC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAtB;AACA,UAAME,QAAQ,GAAGR,WAAW,EAA5B;AAEAH,IAAAA,SAAS,CAAC,MAAM;AAEZW,MAAAA,QAAQ,CAACV,IAAI,EAAL,CAAR,CAAiBW,IAAjB,CAAsBC,QAAQ,IAAI;AAC9B,YAAI,CAACA,QAAQ,CAACC,OAAT,CAAiBC,MAAtB,EAA8B;AAC1B,cAAIV,MAAJ,EAAY;AACRG,YAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH;AACJ,SAJD,MAIO;AACH,cAAIX,UAAU,IAAI,CAACO,QAAQ,CAACC,OAAT,CAAiBI,OAApC,EAA6C;AACzCV,YAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,WAFD,MAGK;AACD,gBAAIZ,MAAM,KAAK,KAAf,EAAsB;AAClBG,cAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH;AACJ;AACJ;AACJ,OAfD;AAiBH,KAnBQ,EAmBN,EAnBM,CAAT;AAqBA,WACI,oBAAC,aAAD,oBAAmBT,KAAnB;AAA0B,MAAA,IAAI,EAAEC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AACD,SAAOF,mBAAP;AACH","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(response => {\n                if (!response.payload.isAuth) {\n                    if (reload) {\n                        props.history.push('/login')\n                    }\n                } else {\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    else {\n                        if (reload === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n            \n        }, [])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n"]},"metadata":{},"sourceType":"module"}